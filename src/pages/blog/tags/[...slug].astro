---
const { slug } = Astro.params;
import { getCollection } from "astro:content";
import PostPreview from "../../../components/PostPreview.astro";
import Tags from "../../../components/Tags.astro";
const blogs = await getCollection("blog", (blog) => blog.data.draft !== true);
const tags = blogs
  .map((blog) => blog.data.tags)
  .flat()
  .reduce<{ [key: string]: number }>(function (result, c) {
    var count = result[c] || 0;
    result[c] = count + 1;
    return result;
  }, {});
import Layout from "../../../layouts/Layout.astro";
export async function getStaticPaths() {
  const blogs = await getCollection("blog", (blog) => blog.data.draft !== true);
  return [...new Set(blogs.map((blog) => blog.data.tags).flat())].map(
    (tag) => ({
      params: { slug: tag },
    }),
  );
}
if (!slug) {
  return Astro.redirect("/404");
}
const allBlogPostsWithTag = blogs.filter((blog) =>
  blog.data.tags.some((tag) => tag === slug),
);
if (allBlogPostsWithTag.length === 0) {
  return Astro.redirect("/404");
}
const postsWithTag = await Promise.all(
  allBlogPostsWithTag.sort(
    (a, b) => +new Date(b.data.date) - +new Date(a.data.date),
  ),
);
---

<Layout
  title={`The Thomas Ledoux blog | ${slug}`}
  description={`All blogs about ${slug}`}
>
  <section>
    <h1 class="text-center text-2xl lg:text-5xl font-bold mb-6">
      All blogs about {slug}
    </h1>
    <Tags tags={tags} slug={slug} />
    <div
      data-pagefind-ignore="all"
      class="grid sm:grid-cols-2 lg:grid-cols-3 gap-6 lg:gap-9 items-center auto-rows-min mt-4"
    >
      {
        postsWithTag.map((post, i) => {
          return <PostPreview {post} index={i} />;
        })
      }
    </div>
  </section>
</Layout>
