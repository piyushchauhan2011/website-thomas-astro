---
import Tag from "./Tag.astro";
interface Props {
  tags: { [key: string]: number };
  slug?: string;
}
const { tags, slug } = Astro.props;
const sortedTags = Object.entries(tags).sort(([, a], [, b]) => b - a);
---

<div class="flex gap-3 flex-wrap" data-pagefind-ignore="all">
  {
    sortedTags
      .slice(0, 5)
      .map(([tag, number]) => (
        <Tag tag={tag} number={number} isActive={tag === slug} />
      ))
  }
  {
    sortedTags.length > 5 ? (
      <>
        <div id="more-tags" class="hidden md:contents">
          {sortedTags.slice(5).map(([tag, number]) => (
            <Tag tag={tag} number={number} isActive={tag === slug} />
          ))}
        </div>
      </>
    ) : null
  }
</div>
{
  sortedTags.length > 5 ? (
    <button
      id="load-more-tags"
      class="md:hidden px-4 mt-4 py-2 bg-secondary text-white rounded-lg lg:hover:scale-[1.04] transition-transform"
    >
      + More tags
    </button>
  ) : null
}

<script>
  document.getElementById("load-more-tags")?.addEventListener("click", () => {
    if (document.getElementById("more-tags")?.classList.contains("hidden")) {
      document.getElementById("load-more-tags")!.innerText = "- Less tags";
      document.getElementById("more-tags")?.classList.remove("hidden");
      document.getElementById("more-tags")?.classList.add("contents");
    } else {
      document.getElementById("load-more-tags")!.innerText = "+ More tags";
      document.getElementById("more-tags")?.classList.add("hidden");
      document.getElementById("more-tags")?.classList.remove("contents");
    }
  });
</script>
