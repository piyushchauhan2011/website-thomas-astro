---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

interface Props {
  img?: ImageMetadata;
  url: string;
  logoAlt?: string;
  logoWidth?: number;
  tags: string[];
  id: string;
}
const { img, url, logoWidth, logoAlt, tags, id } = Astro.props;
---

<li
  id={id}
  class="transform lg:h-[40vh] case border-2 border-primary p-4 lg:p-6 lg:snap-center lg:min-w-[60vw] lg:max-w-[60vw] flex rounded-xl shadow-lg"
>
  <a
    target="_blank"
    rel="noopener noreferrer"
    href={url}
    class="grid lg:grid-cols-7 gap-x-6"
  >
    <div class="lg:col-span-2 flex flex-col justify-center">
      <div class={`max-h-24 lg:mx-0 max-w-[80%] lg:max-w-full flex`}>
        {
          img && logoWidth ? (
            <Image
              width={logoWidth}
              height={100}
              alt={`Logo ${logoAlt}`}
              src={img}
              class="inline-block"
            />
          ) : (
            <span class="text-2xl break-all">{logoAlt}</span>
          )
        }
      </div>
      <ul class="flex lg:order-1 flex-wrap my-4 gap-2 lg:mb-0 w-full">
        {
          tags.map((tag) => {
            return (
              <li class="bg-secondary text-white text-sm py-1 px-4 rounded-md">
                {tag}
              </li>
            );
          })
        }
      </ul>
    </div>
    <div class="lg:p-4 lg:col-span-5 flex-grow justify-center flex flex-col">
      <slot />
    </div>
  </a>
</li>
